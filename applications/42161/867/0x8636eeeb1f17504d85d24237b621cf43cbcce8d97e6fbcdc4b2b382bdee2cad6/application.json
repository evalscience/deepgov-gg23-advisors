{
  "id": "147",
  "chainId": 42161,
  "roundId": "867",
  "projectId": "0x8636eeeb1f17504d85d24237b621cf43cbcce8d97e6fbcdc4b2b382bdee2cad6",
  "metadata": {
    "signature": "0xb76732982298242ac6536972b53dc976d42c45523a5115d3dbf0ca030505854040ed2c1c27f1b7cb673d60f704f308fc6d84428a3bcb6ceff9562e2b46aee7ae1b",
    "application": {
      "round": "0x3E93205B786796Cf7Ea70404E89c7dda3b84D07a",
      "answers": [
        {
          "type": "email",
          "answer": "latheyapoorv@gmail.com",
          "hidden": true,
          "question": "Email Address",
          "questionId": 0
        },
        {
          "type": "short-answer",
          "answer": "@apoorvlathey",
          "hidden": true,
          "question": "Telegram Handle We Can Use To Contact You",
          "questionId": 1
        },
        {
          "type": "short-answer",
          "answer": "https://github.com/impersonator-eth/impersonator",
          "hidden": false,
          "question": "Project GitHub Repo",
          "questionId": 2
        },
        {
          "type": "link",
          "answer": "https://discord.gg/4VTnuVzfmm",
          "hidden": false,
          "question": "Link to your Public Group Chat",
          "questionId": 3
        },
        {
          "type": "paragraph",
          "answer": "https://explorer.gitcoin.co/#/round/42161/608/120",
          "hidden": false,
          "question": "Have you participated in a previous Gitcoin Grants Round? If so, please name the rounds or link the builder profile associated with previous rounds.",
          "questionId": 4
        },
        {
          "type": "paragraph",
          "answer": "Impersonator enhances transparency by allowing any one to log in to dapps as any address.\n\nAll the data is already public on the blockchain but querying it for other addresses is quite complex via etherscan or using scripts.\n\nAs all the protocols already have dapps to make the data human-readable, so Impersonator taps into that and allows the address to be customizable, instead of restricting it to your wallet address.",
          "hidden": false,
          "question": "How does your project contribute to the growth of the OSS ecosystem? Please provide specific examples of how your application enhances or expands the current ecosystem.",
          "questionId": 5
        },
        {
          "type": "paragraph",
          "answer": "Impersonator offers several key features and unique use cases:\n\n\t1.\tWatch-Only Logins: Users can log in to dApps as any Ethereum address without needing private keys, making it safer and more convenient, especially for hardware wallet users.\n\t2.\tMulti-Chain Compatibility: It supports all major EVM chains and testnets, allowing users to interact with a wide variety of dApps across multiple networks.\n\t3.\tENS Support: Users can easily input addresses via ENS, simplifying the process of connecting to dApps.\n\t4.\tDynamic Address and Network Switching: Once connected to a dApp, users can switch between addresses and networks without having to reconnect or sign in again.\n\t5.\tTransaction Calldata Visibility: Users can view the transaction calldata generated by dApps directly on the UI, which is useful for both casual users and developers.\n\t6.\tTenderly Integration for Simulation: Users can simulate transactions using Tenderly, allowing them to test and explore without executing real transactions.\n",
          "hidden": false,
          "question": "What features or use cases does your dApp/App present? How is it differentiated?",
          "questionId": 6
        },
        {
          "type": "paragraph",
          "answer": "The aim would be to improve the Impersonator Browser Extension and make it feature rich by supporting initiating transactions, decoding the calldata of txs, modifying the calldata and the ability to sign the tx with some other ethereum wallet.",
          "hidden": false,
          "question": "What are your plans for further development, and how will the grant funds be used to achieve these goals?",
          "questionId": 7
        },
        {
          "type": "paragraph",
          "answer": "N/A",
          "hidden": false,
          "question": "For any project deploying smart contracts on blockchain networks, please list all your deployer addresses and their corresponding blockchain networks. Use this format for each entry: [deployer_address], [chain_id]â€”for example, 0x123abc..., 42161 (This represents a deployer address on the Arbitrum network). Please include a separate line for each unique deployer address and blockchain combination.",
          "questionId": 8
        }
      ],
      "project": {
        "id": "0x8636eeeb1f17504d85d24237b621cf43cbcce8d97e6fbcdc4b2b382bdee2cad6",
        "title": "Impersonator",
        "logoImg": "bafkreia452tjq7szpqbw6num254ly3gzo3bqycwzjz6eqimxskgynpxqlq",
        "metaPtr": {
          "pointer": "bafkreif6hzecsajfff72mek2inpk2ayymh7o7fk2vkrre4hlbl3fcvq3a4",
          "protocol": "undefined"
        },
        "website": "https://impersonator.xyz",
        "bannerImg": "bafkreidk5rrjh6sqsu54my47cexhzix5qlliaa2m4cgp6l4hqsnn4zvfoy",
        "createdAt": 1673165617127,
        "userGithub": "apoorvlathey",
        "credentials": {
          "github": {
            "type": [
              "VerifiableCredential"
            ],
            "proof": {
              "jws": "eyJhbGciOiJFZERTQSIsImNyaXQiOlsiYjY0Il0sImI2NCI6ZmFsc2V9..F0tK4y3Ll26gVQj0RfRCxAt9m_-Wg_a7aI9uX_2jDD4ZZI1cTUO4oqzI1RAhVDvbanpF74FtMd3I5LBpkQdOCg",
              "type": "Ed25519Signature2018",
              "created": "2023-08-14T16:00:06.599Z",
              "proofPurpose": "assertionMethod",
              "verificationMethod": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC#z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC"
            },
            "issuer": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
            "@context": [
              "https://www.w3.org/2018/credentials/v1"
            ],
            "issuanceDate": "2023-08-14T16:00:06.599Z",
            "expirationDate": "2023-11-12T16:00:06.599Z",
            "credentialSubject": {
              "id": "did:pkh:eip155:1:0x63A556c75443b176b5A4078e929e38bEb37a1ff2",
              "hash": "v0.0.0:XMef24SzU068ciO6h3QlNi1/gyM/VDHfBzKMHYSq7X4=",
              "@context": [
                {
                  "hash": "https://schema.org/Text",
                  "provider": "https://schema.org/Text"
                }
              ],
              "provider": "ClearTextGithubOrg#impersonator-eth#20395316"
            }
          },
          "twitter": {
            "type": [
              "VerifiableCredential"
            ],
            "proof": {
              "jws": "eyJhbGciOiJFZERTQSIsImNyaXQiOlsiYjY0Il0sImI2NCI6ZmFsc2V9..1QCG6KXctzvo1CgVo9qWz0y3Tnwxdw717_cuZleyToxtPwvL3pqsXlLJoWPoj40Pqcn6x-zwrBOaqa1-YnUZBw",
              "type": "Ed25519Signature2018",
              "created": "2023-08-14T16:00:28.387Z",
              "proofPurpose": "assertionMethod",
              "verificationMethod": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC#z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC"
            },
            "issuer": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
            "@context": [
              "https://www.w3.org/2018/credentials/v1"
            ],
            "issuanceDate": "2023-08-14T16:00:28.387Z",
            "expirationDate": "2023-11-12T16:00:28.387Z",
            "credentialSubject": {
              "id": "did:pkh:eip155:1:0x63A556c75443b176b5A4078e929e38bEb37a1ff2",
              "hash": "v0.0.0:QUQWVuO569LZtGSPnhLmK1QmrHPun1SLs8vQzXD97Fk=",
              "@context": [
                {
                  "hash": "https://schema.org/Text",
                  "provider": "https://schema.org/Text"
                }
              ],
              "provider": "ClearTextTwitter#apoorvlathey"
            }
          }
        },
        "description": "Impersonator allows you to Log-in to dapps as ANY Ethereum Address via WalletConnect, iFrame or Browser Extension.\n\n - No private keys are required\n- Connect address to DApps in \"watch-only\" mode\n- Works with all major EVM chains like Ethereum, Arbitrum, Optimism, Polygon, BSC, and various testnets as well.\n- Easily input addresses via ENS\n- Dynamically switch connected address and network, after being connected to a dapp.\n- Transaction calldata generated from dapps is now visible on the UI\n- Tenderly can be used to simulate transactions from the impersonated address. Just need to get the fork id and set it into the config.\n\nThis opens up a huge variety of use cases, which are not possible with current wallets like Metamask:\n- Easily check dapp dashboards for your address on any device, without needing to import your private keys. Even handier for hardware wallet users.\n- Check out how your favorite Whales are using the dapps like Aave, Uniswap, etc. by logging in as them and viewing all the useful information like the amount borrowed, liquidity provision between which range, and more!",
        "lastUpdated": 0,
        "projectGithub": "impersonator-eth",
        "projectTwitter": "apoorvlathey"
      },
      "recipient": "0xf90e6125C8918F1ADAc31f85D80728dB62F17d9B"
    }
  },
  "status": "APPROVED",
  "project": {
    "metadata": {
      "type": "project",
      "title": "Impersonator",
      "logoImg": "bafkreia452tjq7szpqbw6num254ly3gzo3bqycwzjz6eqimxskgynpxqlq",
      "website": "https://impersonator.xyz",
      "bannerImg": "bafkreidk5rrjh6sqsu54my47cexhzix5qlliaa2m4cgp6l4hqsnn4zvfoy",
      "createdAt": 1673165617127,
      "userGithub": "apoorvlathey",
      "credentials": {
        "github": {
          "type": [
            "VerifiableCredential"
          ],
          "proof": {
            "jws": "eyJhbGciOiJFZERTQSIsImNyaXQiOlsiYjY0Il0sImI2NCI6ZmFsc2V9..F0tK4y3Ll26gVQj0RfRCxAt9m_-Wg_a7aI9uX_2jDD4ZZI1cTUO4oqzI1RAhVDvbanpF74FtMd3I5LBpkQdOCg",
            "type": "Ed25519Signature2018",
            "created": "2023-08-14T16:00:06.599Z",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC#z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC"
          },
          "issuer": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
          "@context": [
            "https://www.w3.org/2018/credentials/v1"
          ],
          "issuanceDate": "2023-08-14T16:00:06.599Z",
          "expirationDate": "2023-11-12T16:00:06.599Z",
          "credentialSubject": {
            "id": "did:pkh:eip155:1:0x63A556c75443b176b5A4078e929e38bEb37a1ff2",
            "hash": "v0.0.0:XMef24SzU068ciO6h3QlNi1/gyM/VDHfBzKMHYSq7X4=",
            "@context": [
              {
                "hash": "https://schema.org/Text",
                "provider": "https://schema.org/Text"
              }
            ],
            "provider": "ClearTextGithubOrg#impersonator-eth#20395316"
          }
        },
        "twitter": {
          "type": [
            "VerifiableCredential"
          ],
          "proof": {
            "jws": "eyJhbGciOiJFZERTQSIsImNyaXQiOlsiYjY0Il0sImI2NCI6ZmFsc2V9..1QCG6KXctzvo1CgVo9qWz0y3Tnwxdw717_cuZleyToxtPwvL3pqsXlLJoWPoj40Pqcn6x-zwrBOaqa1-YnUZBw",
            "type": "Ed25519Signature2018",
            "created": "2023-08-14T16:00:28.387Z",
            "proofPurpose": "assertionMethod",
            "verificationMethod": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC#z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC"
          },
          "issuer": "did:key:z6MkghvGHLobLEdj1bgRLhS4LPGJAvbMA1tn2zcRyqmYU5LC",
          "@context": [
            "https://www.w3.org/2018/credentials/v1"
          ],
          "issuanceDate": "2023-08-14T16:00:28.387Z",
          "expirationDate": "2023-11-12T16:00:28.387Z",
          "credentialSubject": {
            "id": "did:pkh:eip155:1:0x63A556c75443b176b5A4078e929e38bEb37a1ff2",
            "hash": "v0.0.0:QUQWVuO569LZtGSPnhLmK1QmrHPun1SLs8vQzXD97Fk=",
            "@context": [
              {
                "hash": "https://schema.org/Text",
                "provider": "https://schema.org/Text"
              }
            ],
            "provider": "ClearTextTwitter#apoorvlathey"
          }
        }
      },
      "description": "Impersonator allows you to Log-in to dapps as ANY Ethereum Address via WalletConnect, iFrame or Browser Extension.\n\n - No private keys are required\n- Connect address to DApps in \"watch-only\" mode\n- Works with all major EVM chains like Ethereum, Arbitrum, Optimism, Polygon, BSC, and various testnets as well.\n- Easily input addresses via ENS\n- Dynamically switch connected address and network, after being connected to a dapp.\n- Transaction calldata generated from dapps is now visible on the UI\n- Tenderly can be used to simulate transactions from the impersonated address. Just need to get the fork id and set it into the config.\n\nThis opens up a huge variety of use cases, which are not possible with current wallets like Metamask:\n- Easily check dapp dashboards for your address on any device, without needing to import your private keys. Even handier for hardware wallet users.\n- Check out how your favorite Whales are using the dapps like Aave, Uniswap, etc. by logging in as them and viewing all the useful information like the amount borrowed, liquidity provision between which range, and more!",
      "logoImgData": {},
      "bannerImgData": {},
      "projectGithub": "impersonator-eth",
      "projectTwitter": "apoorvlathey"
    }
  }
}