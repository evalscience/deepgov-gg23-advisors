{
  "id": "66",
  "chainId": 42161,
  "roundId": "867",
  "projectId": "0xf56cccf1a784ee92c517c0e28adea9af60dc3739717ec8902d6db92192489f5e",
  "metadata": {
    "signature": "0x08c3d2cea8d928062bfefc33d8543b5d04b370501f841e551b489235686c7e501511c65e93968be0e370249bee58efc285e1777557e9a692dad0715fba6012c01c",
    "application": {
      "round": "0x3E93205B786796Cf7Ea70404E89c7dda3b84D07a",
      "answers": [
        {
          "type": "email",
          "answer": "devenrathodrd@gmail.com",
          "hidden": true,
          "question": "Email Address",
          "questionId": 0
        },
        {
          "type": "short-answer",
          "answer": "devenrathodrd",
          "hidden": true,
          "question": "Telegram Handle We Can Use To Contact You",
          "questionId": 1
        },
        {
          "type": "short-answer",
          "answer": "https://github.com/bloomerstv/bloomerstv",
          "hidden": false,
          "question": "Project GitHub Repo",
          "questionId": 2
        },
        {
          "type": "link",
          "hidden": false,
          "question": "Link to your Public Group Chat",
          "questionId": 3
        },
        {
          "type": "paragraph",
          "hidden": false,
          "question": "Have you participated in a previous Gitcoin Grants Round? If so, please name the rounds or link the builder profile associated with previous rounds.",
          "questionId": 4
        },
        {
          "type": "paragraph",
          "answer": "### How BloomersTV Contributes to the OSS Ecosystem  \n\n- **Open-Source & Forkable**: Fully open-source, allowing custom implementations.  \n- **Open API**: Enables Lens apps to integrate live streams easily.  \n- **Decentralized Streaming**: Uses Livepeer & IPFS, reducing reliance on centralized platforms.  \n- **Web3 Tech Stack**: Expands GraphQL, Apollo, and Zustand use in Web3 apps.  \n- **Fair Monetization**: 100% revenue to creators, promoting sustainable OSS funding.  \n- **Cross-Platform**: Supports Lens & Farcaster, increasing decentralized content reach.  \n- **Community-Driven**: Transparent funding for mobile apps, hosting, and development.  \n",
          "hidden": false,
          "question": "How does your project contribute to the growth of the OSS ecosystem? Please provide specific examples of how your application enhances or expands the current ecosystem.",
          "questionId": 5
        },
        {
          "type": "paragraph",
          "answer": "### Features & Differentiation of BloomersTV  \n\n#### **Key Features:**  \n- **Live Chat & Real-Time Moderation**: View and send live messages across Lens clients with instant user moderation.  \n- **Super Chat**: Support streamers with token-based super chats.  \n- **Clip & Share**: Capture live stream clips and post them on Lens.  \n- **Content Management**: Manage stream replays and clips easily.  \n- **Super Bloomers Plan**: Get 28-day VOD, a special badge, and 0% revenue cut on collects.  \n- **Watch Modes**: Choose between **Low Latency** (fast) and **Quality** (smooth).  \n- **Mobile Optimization & PWA**: Fully optimized for Android, iOS, and PWA support.  \n- **Streaming Options**: Stream via OBS for best quality or directly from the browser.  \n- **Playback Control**: Adjust speed and quality for stream replays.  \n- **Offline Page**: Show last public stream replay when offline.  \n- **Community Posting**: Post text, images, and engage with the community.  \n- **Stream Replay Visibility**: Set replays to **public, unlisted, or private**.  \n- **Profile Page Frame**: A unique profile frame compatible with Lens & Farcaster.  \n\n#### **How It’s Different:**  \n- **100% Creator Earnings**: Unlike other platforms, BloomersTV takes **0% cut** from creator revenue.  \n- **Decentralized & Open-Source**: Built on **Lens, Livepeer, and IPFS**, with an **open API** for integrations.  \n- **Cross-Platform Streaming**: Streams are visible across **Lens & Farcaster**, increasing reach.  \n- **Community-Driven**: Prioritizes user-owned infrastructure and open participation.  \n",
          "hidden": false,
          "question": "What features or use cases does your dApp/App present? How is it differentiated?",
          "questionId": 6
        },
        {
          "type": "paragraph",
          "answer": "### Further Development Plans & Grant Fund Usage  \n\n#### **Development Plans:**  \n- **Mobile Apps**: Build native Android & iOS apps for better accessibility.  \n- **Enhanced Streaming**: Improve Livepeer integration for higher-quality streams.  \n- **More Web3 Features**: Expand Lens & Farcaster interoperability and NFT-based monetization.  \n- **Better Content Management**: Advanced replay, clip, and moderation tools.  \n- **Improved UI/UX**: Enhance design and user experience with Framer Motion & Material UI.  \n\n#### **Grant Fund Usage:**  \n- **Mobile App Development**: Funding native Android & iOS builds.  \n- **Streaming Costs**: Pay for Livepeer transcoding to maintain free streaming.  \n- **Website & API Hosting**: Ensure smooth performance and uptime.  \n- **IPFS Storage**: Store images and videos securely on IPFS.  \n- **Open API Development**: Expand API for easier integrations.  \n",
          "hidden": false,
          "question": "What are your plans for further development, and how will the grant funds be used to achieve these goals?",
          "questionId": 7
        },
        {
          "type": "paragraph",
          "answer": "0xffEF59C276474E006b19905C0Dd9F4Ef7122Cb48, 137",
          "hidden": false,
          "question": "For any project deploying smart contracts on blockchain networks, please list all your deployer addresses and their corresponding blockchain networks. Use this format for each entry: [deployer_address], [chain_id]—for example, 0x123abc..., 42161 (This represents a deployer address on the Arbitrum network). Please include a separate line for each unique deployer address and blockchain combination.",
          "questionId": 8
        }
      ],
      "project": {
        "id": "0xf56cccf1a784ee92c517c0e28adea9af60dc3739717ec8902d6db92192489f5e",
        "title": "BloomersTV",
        "logoImg": "bafkreiban64dy7iguqsqicmi5i4qvwjsh6xgzj2ahyr4uwk7i3wt526njy",
        "metaPtr": {
          "pointer": "bafkreifd4orl7a3cd5syzyt2k24kntc2p3onyobyqgnf2cw5k5ilqt7v7i",
          "protocol": "undefined"
        },
        "website": "https://bloomers.tv",
        "bannerImg": "bafkreicukajmitiaubhq6konfkynvu7cygfkz5flzzfe6lc5ekvz6qscri",
        "createdAt": 1742905672916,
        "userGithub": "RathodDeven",
        "credentials": {
          "github": {
            "type": [
              "VerifiableCredential"
            ],
            "proof": {
              "type": "EthereumEip712Signature2021",
              "created": "2025-03-25T12:27:37.312Z",
              "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
              "proofValue": "0xbba82ebc2cc25bc8188f943125b27c78100175fd57fa3a295666f526b5f40f9415746e885df31b5290716d8caf8e556403c7f05f8442fbffbd36ed17c84f07fd1b",
              "eip712Domain": {
                "types": {
                  "Proof": [
                    {
                      "name": "@context",
                      "type": "string"
                    },
                    {
                      "name": "created",
                      "type": "string"
                    },
                    {
                      "name": "proofPurpose",
                      "type": "string"
                    },
                    {
                      "name": "type",
                      "type": "string"
                    },
                    {
                      "name": "verificationMethod",
                      "type": "string"
                    }
                  ],
                  "@context": [
                    {
                      "name": "nullifiers",
                      "type": "NullifiersContext"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "Document": [
                    {
                      "name": "@context",
                      "type": "string[]"
                    },
                    {
                      "name": "credentialSubject",
                      "type": "CredentialSubject"
                    },
                    {
                      "name": "expirationDate",
                      "type": "string"
                    },
                    {
                      "name": "issuanceDate",
                      "type": "string"
                    },
                    {
                      "name": "issuer",
                      "type": "string"
                    },
                    {
                      "name": "proof",
                      "type": "Proof"
                    },
                    {
                      "name": "type",
                      "type": "string[]"
                    }
                  ],
                  "EIP712Domain": [
                    {
                      "name": "name",
                      "type": "string"
                    }
                  ],
                  "CredentialSubject": [
                    {
                      "name": "@context",
                      "type": "@context"
                    },
                    {
                      "name": "nullifiers",
                      "type": "string[]"
                    },
                    {
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "NullifiersContext": [
                    {
                      "name": "@container",
                      "type": "string"
                    },
                    {
                      "name": "@type",
                      "type": "string"
                    }
                  ]
                },
                "domain": {
                  "name": "VerifiableCredential"
                },
                "primaryType": "Document"
              },
              "proofPurpose": "assertionMethod",
              "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
            },
            "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
            "@context": [
              "https://www.w3.org/2018/credentials/v1",
              "https://w3id.org/vc/status-list/2021/v1"
            ],
            "issuanceDate": "2025-03-25T12:27:37.312Z",
            "expirationDate": "2025-06-23T12:27:37.312Z",
            "credentialSubject": {
              "id": "did:pkh:eip155:1:0xC8D0E78379d96D0A436b8597835670b13445A6Db",
              "@context": {
                "provider": "https://schema.org/Text",
                "nullifiers": {
                  "@type": "https://schema.org/Text",
                  "@container": "@list"
                }
              },
              "provider": "ClearTextGithubOrg#bloomerstv#69627223",
              "nullifiers": [
                "v0.0.0:R/HWQEtAQlxFbt7SifYa36LlZGu4/RLfPjng/MdGdRY="
              ]
            }
          },
          "twitter": {
            "type": [
              "VerifiableCredential"
            ],
            "proof": {
              "type": "EthereumEip712Signature2021",
              "created": "2025-03-25T12:27:07.930Z",
              "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
              "proofValue": "0xfe881d076822f850e2e643fb7e9969432d111ed1e11946e5756b8ef5d58ed2c87909e46f4bb761973947863ecf7dd3cfa9f66395d988278b697dd33a59d408901b",
              "eip712Domain": {
                "types": {
                  "Proof": [
                    {
                      "name": "@context",
                      "type": "string"
                    },
                    {
                      "name": "created",
                      "type": "string"
                    },
                    {
                      "name": "proofPurpose",
                      "type": "string"
                    },
                    {
                      "name": "type",
                      "type": "string"
                    },
                    {
                      "name": "verificationMethod",
                      "type": "string"
                    }
                  ],
                  "@context": [
                    {
                      "name": "nullifiers",
                      "type": "NullifiersContext"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "Document": [
                    {
                      "name": "@context",
                      "type": "string[]"
                    },
                    {
                      "name": "credentialSubject",
                      "type": "CredentialSubject"
                    },
                    {
                      "name": "expirationDate",
                      "type": "string"
                    },
                    {
                      "name": "issuanceDate",
                      "type": "string"
                    },
                    {
                      "name": "issuer",
                      "type": "string"
                    },
                    {
                      "name": "proof",
                      "type": "Proof"
                    },
                    {
                      "name": "type",
                      "type": "string[]"
                    }
                  ],
                  "EIP712Domain": [
                    {
                      "name": "name",
                      "type": "string"
                    }
                  ],
                  "CredentialSubject": [
                    {
                      "name": "@context",
                      "type": "@context"
                    },
                    {
                      "name": "nullifiers",
                      "type": "string[]"
                    },
                    {
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "NullifiersContext": [
                    {
                      "name": "@container",
                      "type": "string"
                    },
                    {
                      "name": "@type",
                      "type": "string"
                    }
                  ]
                },
                "domain": {
                  "name": "VerifiableCredential"
                },
                "primaryType": "Document"
              },
              "proofPurpose": "assertionMethod",
              "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
            },
            "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
            "@context": [
              "https://www.w3.org/2018/credentials/v1",
              "https://w3id.org/vc/status-list/2021/v1"
            ],
            "issuanceDate": "2025-03-25T12:27:07.930Z",
            "expirationDate": "2025-06-23T12:27:07.930Z",
            "credentialSubject": {
              "id": "did:pkh:eip155:1:0xC8D0E78379d96D0A436b8597835670b13445A6Db",
              "@context": {
                "provider": "https://schema.org/Text",
                "nullifiers": {
                  "@type": "https://schema.org/Text",
                  "@container": "@list"
                }
              },
              "provider": "ClearTextTwitter#bloomerstv",
              "nullifiers": [
                "v0.0.0:PdzhqF2c/ysaM7o83lHbGlP9xYmkVK4QY7ykOf6N2gE="
              ]
            }
          }
        },
        "description": "# BloomersTV is an open-source live-streaming platform on Lens Protocol. \n\n## Features\n\n- **Live Chat**: You can view live comments under the Lens stream post from all other Lens clients in real-time and send instant live messages from BloomersTV.\n- **Real-Time Moderation**: Block and remove unwanted users from the live chat in real-time.\n- **Super Chat**: Support live streamers by sending super chats using dozens of available tokens.\n- **Clip & Share**: Take clips from live streams and post them as videos on Lens.\n- **Content Management**: Manage all stream replays and clips via the content management page after the streams end.\n- **Super Bloomers Plan**: Support BloomersTV and gain additional features, including:\n  - 28 days of VOD (instead of 7 days for the free plan)\n  - Super Bloomers Badge\n  - Zero percent revenue split on collect features (compared to 5% for free plan)\n- **Watch Modes**: Choose between two watch modes:\n  - **Low Latency**: Lower latency but might experience occasional lags.\n  - **Quality**: Smoother viewing experience but with higher latency.\n- **Web Push Notifications**: Get notified when your subscribed streamer goes live with web push notifications.\n- **Mobile Optimization & PWA Support**: Enjoy a fully optimized mobile experience on both Android and iOS devices, with PWA support for quick access.\n- **Streaming Options**: Stream using OBS for the best quality (recommended) or stream directly from the browser by sharing your camera or screen quickly.\n- **Playback Control**: Select playback speed and adjust the quality for stream replays.\n- **Offline Page**: Show your last public stream replay on your offline page when not live.\n- **Community Posting**: Post text, and image Lens posts, and engage with the community through a dedicated posts section.\n- **Stream Replay Visibility**: Set replay visibility to public, unlisted, or private based on your preference.\n- **Profile Page Frame**: A unique frame that works on both lens & farcaster, for your profile page \n\n## How will the donations be used?\n\n- **Build Mobile Apps**: Create Android and iOS apps for BloomersTV to make it easier for users to access content.\n- **Streaming Costs**: Pay for Livepeer streaming to ensure high-quality broadcasts.\n- **Website & API Hosting**: Cover the costs of hosting the BloomersTV website for a smooth user experience.\n- **IPFS Storage**: Store images and videos securely on IPFS for reliable access.\n- **Open API**: Provide an open API for easy integration with Lens apps and custom stream frontends.\n\n## Technologies Used\n\n- **Frontend**: React, Next.js, Tailwind CSS\n- **Backend**: Node.js, Express, Apollo Client\n- **Blockchain & Web3**: Lens Protocol, Ethers.js, Wagmi, RainbowKit\n- **Database**: MongoDB\n- **Streaming**: Livepeer, HLS (HTTP Live Streaming)\n- **Package Manager**: pnpm\n- **File Storage**: IPFS (via 4everland STS Token)\n- **UI/UX**: MUI (Material-UI), Framer Motion\n- **State Management**: Zustand\n- **GraphQL**: GraphQL, Apollo Client, GraphQL Code Generator\n\n## Impact Goals:\n\nBloomersTV aims to transform live streaming by giving creators full control over their earnings and distributing streams across multiple platforms for greater reach. It fosters a creator-first ecosystem that encourages open participation and community-driven growth.\n\n### Follow the development of this platform [here](https://hey.xyz/u/bloomerstv?type=media)",
        "lastUpdated": 0,
        "projectGithub": "bloomerstv",
        "projectTwitter": "bloomerstv"
      },
      "recipient": "0xC8D0E78379d96D0A436b8597835670b13445A6Db"
    }
  },
  "status": "APPROVED",
  "project": {
    "metadata": {
      "type": "project",
      "title": "BloomersTV",
      "logoImg": "bafkreiban64dy7iguqsqicmi5i4qvwjsh6xgzj2ahyr4uwk7i3wt526njy",
      "website": "https://bloomers.tv",
      "bannerImg": "bafkreicukajmitiaubhq6konfkynvu7cygfkz5flzzfe6lc5ekvz6qscri",
      "createdAt": 1742905672916,
      "userGithub": "RathodDeven",
      "credentials": {
        "github": {
          "type": [
            "VerifiableCredential"
          ],
          "proof": {
            "type": "EthereumEip712Signature2021",
            "created": "2025-03-25T12:27:37.312Z",
            "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
            "proofValue": "0xbba82ebc2cc25bc8188f943125b27c78100175fd57fa3a295666f526b5f40f9415746e885df31b5290716d8caf8e556403c7f05f8442fbffbd36ed17c84f07fd1b",
            "eip712Domain": {
              "types": {
                "Proof": [
                  {
                    "name": "@context",
                    "type": "string"
                  },
                  {
                    "name": "created",
                    "type": "string"
                  },
                  {
                    "name": "proofPurpose",
                    "type": "string"
                  },
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "verificationMethod",
                    "type": "string"
                  }
                ],
                "@context": [
                  {
                    "name": "nullifiers",
                    "type": "NullifiersContext"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "Document": [
                  {
                    "name": "@context",
                    "type": "string[]"
                  },
                  {
                    "name": "credentialSubject",
                    "type": "CredentialSubject"
                  },
                  {
                    "name": "expirationDate",
                    "type": "string"
                  },
                  {
                    "name": "issuanceDate",
                    "type": "string"
                  },
                  {
                    "name": "issuer",
                    "type": "string"
                  },
                  {
                    "name": "proof",
                    "type": "Proof"
                  },
                  {
                    "name": "type",
                    "type": "string[]"
                  }
                ],
                "EIP712Domain": [
                  {
                    "name": "name",
                    "type": "string"
                  }
                ],
                "CredentialSubject": [
                  {
                    "name": "@context",
                    "type": "@context"
                  },
                  {
                    "name": "nullifiers",
                    "type": "string[]"
                  },
                  {
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "NullifiersContext": [
                  {
                    "name": "@container",
                    "type": "string"
                  },
                  {
                    "name": "@type",
                    "type": "string"
                  }
                ]
              },
              "domain": {
                "name": "VerifiableCredential"
              },
              "primaryType": "Document"
            },
            "proofPurpose": "assertionMethod",
            "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
          },
          "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://w3id.org/vc/status-list/2021/v1"
          ],
          "issuanceDate": "2025-03-25T12:27:37.312Z",
          "expirationDate": "2025-06-23T12:27:37.312Z",
          "credentialSubject": {
            "id": "did:pkh:eip155:1:0xC8D0E78379d96D0A436b8597835670b13445A6Db",
            "@context": {
              "provider": "https://schema.org/Text",
              "nullifiers": {
                "@type": "https://schema.org/Text",
                "@container": "@list"
              }
            },
            "provider": "ClearTextGithubOrg#bloomerstv#69627223",
            "nullifiers": [
              "v0.0.0:R/HWQEtAQlxFbt7SifYa36LlZGu4/RLfPjng/MdGdRY="
            ]
          }
        },
        "twitter": {
          "type": [
            "VerifiableCredential"
          ],
          "proof": {
            "type": "EthereumEip712Signature2021",
            "created": "2025-03-25T12:27:07.930Z",
            "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
            "proofValue": "0xfe881d076822f850e2e643fb7e9969432d111ed1e11946e5756b8ef5d58ed2c87909e46f4bb761973947863ecf7dd3cfa9f66395d988278b697dd33a59d408901b",
            "eip712Domain": {
              "types": {
                "Proof": [
                  {
                    "name": "@context",
                    "type": "string"
                  },
                  {
                    "name": "created",
                    "type": "string"
                  },
                  {
                    "name": "proofPurpose",
                    "type": "string"
                  },
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "verificationMethod",
                    "type": "string"
                  }
                ],
                "@context": [
                  {
                    "name": "nullifiers",
                    "type": "NullifiersContext"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "Document": [
                  {
                    "name": "@context",
                    "type": "string[]"
                  },
                  {
                    "name": "credentialSubject",
                    "type": "CredentialSubject"
                  },
                  {
                    "name": "expirationDate",
                    "type": "string"
                  },
                  {
                    "name": "issuanceDate",
                    "type": "string"
                  },
                  {
                    "name": "issuer",
                    "type": "string"
                  },
                  {
                    "name": "proof",
                    "type": "Proof"
                  },
                  {
                    "name": "type",
                    "type": "string[]"
                  }
                ],
                "EIP712Domain": [
                  {
                    "name": "name",
                    "type": "string"
                  }
                ],
                "CredentialSubject": [
                  {
                    "name": "@context",
                    "type": "@context"
                  },
                  {
                    "name": "nullifiers",
                    "type": "string[]"
                  },
                  {
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "NullifiersContext": [
                  {
                    "name": "@container",
                    "type": "string"
                  },
                  {
                    "name": "@type",
                    "type": "string"
                  }
                ]
              },
              "domain": {
                "name": "VerifiableCredential"
              },
              "primaryType": "Document"
            },
            "proofPurpose": "assertionMethod",
            "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
          },
          "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://w3id.org/vc/status-list/2021/v1"
          ],
          "issuanceDate": "2025-03-25T12:27:07.930Z",
          "expirationDate": "2025-06-23T12:27:07.930Z",
          "credentialSubject": {
            "id": "did:pkh:eip155:1:0xC8D0E78379d96D0A436b8597835670b13445A6Db",
            "@context": {
              "provider": "https://schema.org/Text",
              "nullifiers": {
                "@type": "https://schema.org/Text",
                "@container": "@list"
              }
            },
            "provider": "ClearTextTwitter#bloomerstv",
            "nullifiers": [
              "v0.0.0:PdzhqF2c/ysaM7o83lHbGlP9xYmkVK4QY7ykOf6N2gE="
            ]
          }
        }
      },
      "description": "# BloomersTV is an open-source live-streaming platform on Lens Protocol. \n\n## Features\n\n- **Live Chat**: You can view live comments under the Lens stream post from all other Lens clients in real-time and send instant live messages from BloomersTV.\n- **Real-Time Moderation**: Block and remove unwanted users from the live chat in real-time.\n- **Super Chat**: Support live streamers by sending super chats using dozens of available tokens.\n- **Clip & Share**: Take clips from live streams and post them as videos on Lens.\n- **Content Management**: Manage all stream replays and clips via the content management page after the streams end.\n- **Super Bloomers Plan**: Support BloomersTV and gain additional features, including:\n  - 28 days of VOD (instead of 7 days for the free plan)\n  - Super Bloomers Badge\n  - Zero percent revenue split on collect features (compared to 5% for free plan)\n- **Watch Modes**: Choose between two watch modes:\n  - **Low Latency**: Lower latency but might experience occasional lags.\n  - **Quality**: Smoother viewing experience but with higher latency.\n- **Web Push Notifications**: Get notified when your subscribed streamer goes live with web push notifications.\n- **Mobile Optimization & PWA Support**: Enjoy a fully optimized mobile experience on both Android and iOS devices, with PWA support for quick access.\n- **Streaming Options**: Stream using OBS for the best quality (recommended) or stream directly from the browser by sharing your camera or screen quickly.\n- **Playback Control**: Select playback speed and adjust the quality for stream replays.\n- **Offline Page**: Show your last public stream replay on your offline page when not live.\n- **Community Posting**: Post text, and image Lens posts, and engage with the community through a dedicated posts section.\n- **Stream Replay Visibility**: Set replay visibility to public, unlisted, or private based on your preference.\n- **Profile Page Frame**: A unique frame that works on both lens & farcaster, for your profile page \n\n## How will the donations be used?\n\n- **Build Mobile Apps**: Create Android and iOS apps for BloomersTV to make it easier for users to access content.\n- **Streaming Costs**: Pay for Livepeer streaming to ensure high-quality broadcasts.\n- **Website & API Hosting**: Cover the costs of hosting the BloomersTV website for a smooth user experience.\n- **IPFS Storage**: Store images and videos securely on IPFS for reliable access.\n- **Open API**: Provide an open API for easy integration with Lens apps and custom stream frontends.\n\n## Technologies Used\n\n- **Frontend**: React, Next.js, Tailwind CSS\n- **Backend**: Node.js, Express, Apollo Client\n- **Blockchain & Web3**: Lens Protocol, Ethers.js, Wagmi, RainbowKit\n- **Database**: MongoDB\n- **Streaming**: Livepeer, HLS (HTTP Live Streaming)\n- **Package Manager**: pnpm\n- **File Storage**: IPFS (via 4everland STS Token)\n- **UI/UX**: MUI (Material-UI), Framer Motion\n- **State Management**: Zustand\n- **GraphQL**: GraphQL, Apollo Client, GraphQL Code Generator\n\n## Impact Goals:\n\nBloomersTV aims to transform live streaming by giving creators full control over their earnings and distributing streams across multiple platforms for greater reach. It fosters a creator-first ecosystem that encourages open participation and community-driven growth.\n\n### Follow the development of this platform [here](https://hey.xyz/u/bloomerstv?type=media)",
      "logoImgData": {},
      "bannerImgData": {},
      "projectGithub": "bloomerstv",
      "projectTwitter": "bloomerstv"
    }
  }
}