{
  "id": "44",
  "chainId": 42161,
  "roundId": "863",
  "projectId": "0x2599d2f2c4c9ffc25fa8d11bcd14a8a9de37b072911ffd7cf3ce515e479375f2",
  "metadata": {
    "signature": "0xe137360532fd42f28f2cc874748b8bf954de005849a086aef15973914f4f59d06c57feab29814415f6a321a0845584e034be22ec464d3b2ceb56bc96b30be8961b",
    "application": {
      "round": "0xe5B88c67fCd25f0a7BAD6cF7c5A5197e61BFd143",
      "answers": [
        {
          "type": "email",
          "answer": "rodionova.anastasia@proton.me",
          "hidden": true,
          "question": "Email Address",
          "questionId": 0
        },
        {
          "type": "short-answer",
          "answer": "nastyarod",
          "hidden": true,
          "question": "Telegram Handle We Can Use To Contact You",
          "questionId": 1
        },
        {
          "type": "paragraph",
          "answer": "https://github.com/3loop/loop-decoder",
          "hidden": false,
          "question": "Project GitHub Repo",
          "questionId": 2
        },
        {
          "type": "link",
          "hidden": false,
          "question": "Link to your Public Group Chat",
          "questionId": 3
        },
        {
          "type": "paragraph",
          "answer": "GG20, GG22",
          "hidden": false,
          "question": "Have you participated in a previous Gitcoin Grants Round? If so, please name the rounds or link the builder profile associated with previous rounds",
          "questionId": 4
        },
        {
          "type": "paragraph",
          "answer": "A TypeScript library to transform any EVM transaction into a human-readable format.",
          "hidden": false,
          "question": "Provide a brief overview of your tool, library, or framework. What specific problem or inefficiency in the development process does it address?",
          "questionId": 5
        },
        {
          "type": "paragraph",
          "answer": "It's a TypeScript library with an easy-to-follow guide that lets JavaScript developers quickly integrate EVM transactions into their projects. With minimal dependencies, it simplifies displaying EVM transactions in a clear, user-friendly format for apps or interfaces. For example, the library supports decoding specific transactions like Gnosis Safe, so developers don’t need to understand the unique details of decoding those transactions.",
          "hidden": false,
          "question": "How does your project reduce development barriers, improve efficiency, or enhance the security of Web3 projects? Please provide specific examples or metrics if available.",
          "questionId": 6
        },
        {
          "type": "paragraph",
          "answer": "79 Github stars, 100-400 npm weekly downloads",
          "hidden": false,
          "question": "Describe the current usage and support for your tool within the developer community. This could include GitHub stars, downloads, or testimonials from developers.",
          "questionId": 7
        },
        {
          "type": "paragraph",
          "answer": "Adding support for Account Abstraction transactions, improving the library's robustness, add decoding of more edge cases and proxy patterns, and writing additional transaction interpreters",
          "hidden": false,
          "question": "Outline your project's roadmap and how the grant funds will be used to achieve your development goals.",
          "questionId": 8
        },
        {
          "type": "paragraph",
          "answer": "-",
          "hidden": false,
          "question": "For any project deploying smart contracts on blockchain networks, please list all your deployer addresses and their corresponding blockchain networks. Use this format for each entry: [deployer_address], [chain_id]—for example, 0x123abc..., 42161 (This represents a deployer address on the Arbitrum network). Please include a separate line for each unique deployer address and blockchain combination.",
          "questionId": 9
        }
      ],
      "project": {
        "id": "0x2599d2f2c4c9ffc25fa8d11bcd14a8a9de37b072911ffd7cf3ce515e479375f2",
        "title": "Loop Decoder",
        "logoImg": "bafkreicuowbieib5orgvkklukja4tbldzyewtc6pyytzwzsrqbh4xvna5q",
        "metaPtr": {
          "pointer": "bafkreifscu53at4hgq7xyslnw5iq2ccreinqeqivslg7wyfjqjgq2vphcy",
          "protocol": "undefined"
        },
        "website": "https://loop-decoder.3loop.io",
        "bannerImg": "bafkreiccietkiyqmlcavzmqhlg3q46axgkrhblo7fmzaeg6fxeemvaikqy",
        "createdAt": 1743166846143,
        "userGithub": "anastasiarods",
        "credentials": {
          "github": {
            "type": [
              "VerifiableCredential"
            ],
            "proof": {
              "type": "EthereumEip712Signature2021",
              "created": "2025-03-28T13:00:30.450Z",
              "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
              "proofValue": "0xec1b4a44c1ba11993dfa759ba137ce80aa62f2ee8e3ec8a114917bfd61cbe823269a2bd2641eff89da4ef2c532d200f8bbc893978855ef6e33e93601f3044f081b",
              "eip712Domain": {
                "types": {
                  "Proof": [
                    {
                      "name": "@context",
                      "type": "string"
                    },
                    {
                      "name": "created",
                      "type": "string"
                    },
                    {
                      "name": "proofPurpose",
                      "type": "string"
                    },
                    {
                      "name": "type",
                      "type": "string"
                    },
                    {
                      "name": "verificationMethod",
                      "type": "string"
                    }
                  ],
                  "@context": [
                    {
                      "name": "nullifiers",
                      "type": "NullifiersContext"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "Document": [
                    {
                      "name": "@context",
                      "type": "string[]"
                    },
                    {
                      "name": "credentialSubject",
                      "type": "CredentialSubject"
                    },
                    {
                      "name": "expirationDate",
                      "type": "string"
                    },
                    {
                      "name": "issuanceDate",
                      "type": "string"
                    },
                    {
                      "name": "issuer",
                      "type": "string"
                    },
                    {
                      "name": "proof",
                      "type": "Proof"
                    },
                    {
                      "name": "type",
                      "type": "string[]"
                    }
                  ],
                  "EIP712Domain": [
                    {
                      "name": "name",
                      "type": "string"
                    }
                  ],
                  "CredentialSubject": [
                    {
                      "name": "@context",
                      "type": "@context"
                    },
                    {
                      "name": "nullifiers",
                      "type": "string[]"
                    },
                    {
                      "name": "id",
                      "type": "string"
                    },
                    {
                      "name": "provider",
                      "type": "string"
                    }
                  ],
                  "NullifiersContext": [
                    {
                      "name": "@container",
                      "type": "string"
                    },
                    {
                      "name": "@type",
                      "type": "string"
                    }
                  ]
                },
                "domain": {
                  "name": "VerifiableCredential"
                },
                "primaryType": "Document"
              },
              "proofPurpose": "assertionMethod",
              "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
            },
            "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
            "@context": [
              "https://www.w3.org/2018/credentials/v1",
              "https://w3id.org/vc/status-list/2021/v1"
            ],
            "issuanceDate": "2025-03-28T13:00:30.449Z",
            "expirationDate": "2025-06-26T13:00:30.449Z",
            "credentialSubject": {
              "id": "did:pkh:eip155:1:0x6C994eEF6fdbeE8BCFF9016B7CE3A53b489Ad155",
              "@context": {
                "provider": "https://schema.org/Text",
                "nullifiers": {
                  "@type": "https://schema.org/Text",
                  "@container": "@list"
                }
              },
              "provider": "ClearTextGithubOrg#3loop#16974922",
              "nullifiers": [
                "v0.0.0:wO0dPv7J/ENbY3h96KYbk2KeP6A/KofyfxPFBihAQQM="
              ]
            }
          }
        },
        "description": "# Loop Decoder\n\nLoop Decoder is a TypeScript library with minimal external dependencies that transforms blockchain data into a human-readable format.\n\n## Key Features\n\n- Works in any JavaScript environment\n- Minimal external dependencies - you only need an RPC; everything else can be fetched from your own storage\n- Highly customizable - we don't force you to use a specific API or storage; instead, we provide data loaders\n\n## Transaction Decoder\n\nThe [Transaction Decoder](https://github.com/3loop/loop-decoder/tree/main/packages/transaction-decoder) package transforms raw transactions, including calldata, traces, and events, into a structured format with detailed information about all function calls and parameters. The decoded transaction includes:\n\n- Method calls\n- Trace calls\n- Events\n- All transfers\n- Interactions with other contracts\n- Error information\n\nSee the Decoded Transaction section in our [playground](https://loop-decoder-web.vercel.app/) for transaction examples.\n\n## Transaction Interpreter\n\nThe [Transaction Interpreter](https://github.com/3loop/loop-decoder/tree/main/packages/transaction-interpreter) allows you to understand what really happened in any transaction. In Loop Decoder, this is a JavaScript function that takes a Decoded Transaction and selects the most important fields and parameters based on the type of contract interacted with. The goal is to abstract away blockchain and smart contract nuances, producing an object understandable for both technical and non-technical users.\n\n## Examples\n\n- [Decoder HTTP Server](https://github.com/3loop/decoder-api) - A simple HTTP server that exposes a REST API to decode transactions\n- [Firebase Push Notifications](https://github.com/3loop/example-push-notifications) - Firebase Cloud Function that sends push notifications with decoded transactions\n- [Farcaster Frame](https://github.com/3loop/transaction-frame) - Farcaster Frame that displays transaction in a human-readable format\n- [Farcaster Bot](https://loop-decoder.3loop.io/recipes/fc-bot/) - Farcaster Bot for human-readable transaction alerts\n- [Telegram Bot](https://loop-decoder.3loop.io/recipes/tg-bot/) - Telegram Bot for human-readable transaction alerts\n\n## Links\n\n- [GitHub](https://github.com/3loop/loop-decoder/)\n- [Documentation](https://loop-decoder.3loop.io/)\n- [Playground](https://loop-decoder-web.vercel.app/)",
        "lastUpdated": 0,
        "projectGithub": "3loop",
        "projectTwitter": "3loop_io"
      },
      "recipient": "0x593101d96409156d5bb9cd4b4c349687e37d61ea"
    }
  },
  "status": "APPROVED",
  "project": {
    "metadata": {
      "type": "project",
      "title": "Loop Decoder",
      "logoImg": "bafkreicuowbieib5orgvkklukja4tbldzyewtc6pyytzwzsrqbh4xvna5q",
      "website": "https://loop-decoder.3loop.io",
      "bannerImg": "bafkreiccietkiyqmlcavzmqhlg3q46axgkrhblo7fmzaeg6fxeemvaikqy",
      "createdAt": 1743166846143,
      "userGithub": "anastasiarods",
      "credentials": {
        "github": {
          "type": [
            "VerifiableCredential"
          ],
          "proof": {
            "type": "EthereumEip712Signature2021",
            "created": "2025-03-28T13:00:30.450Z",
            "@context": "https://w3id.org/security/suites/eip712sig-2021/v1",
            "proofValue": "0xec1b4a44c1ba11993dfa759ba137ce80aa62f2ee8e3ec8a114917bfd61cbe823269a2bd2641eff89da4ef2c532d200f8bbc893978855ef6e33e93601f3044f081b",
            "eip712Domain": {
              "types": {
                "Proof": [
                  {
                    "name": "@context",
                    "type": "string"
                  },
                  {
                    "name": "created",
                    "type": "string"
                  },
                  {
                    "name": "proofPurpose",
                    "type": "string"
                  },
                  {
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "name": "verificationMethod",
                    "type": "string"
                  }
                ],
                "@context": [
                  {
                    "name": "nullifiers",
                    "type": "NullifiersContext"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "Document": [
                  {
                    "name": "@context",
                    "type": "string[]"
                  },
                  {
                    "name": "credentialSubject",
                    "type": "CredentialSubject"
                  },
                  {
                    "name": "expirationDate",
                    "type": "string"
                  },
                  {
                    "name": "issuanceDate",
                    "type": "string"
                  },
                  {
                    "name": "issuer",
                    "type": "string"
                  },
                  {
                    "name": "proof",
                    "type": "Proof"
                  },
                  {
                    "name": "type",
                    "type": "string[]"
                  }
                ],
                "EIP712Domain": [
                  {
                    "name": "name",
                    "type": "string"
                  }
                ],
                "CredentialSubject": [
                  {
                    "name": "@context",
                    "type": "@context"
                  },
                  {
                    "name": "nullifiers",
                    "type": "string[]"
                  },
                  {
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "name": "provider",
                    "type": "string"
                  }
                ],
                "NullifiersContext": [
                  {
                    "name": "@container",
                    "type": "string"
                  },
                  {
                    "name": "@type",
                    "type": "string"
                  }
                ]
              },
              "domain": {
                "name": "VerifiableCredential"
              },
              "primaryType": "Document"
            },
            "proofPurpose": "assertionMethod",
            "verificationMethod": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb#controller"
          },
          "issuer": "did:ethr:0xd6f8d6ca86aa01e551a311d670a0d1bd8577e5fb",
          "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://w3id.org/vc/status-list/2021/v1"
          ],
          "issuanceDate": "2025-03-28T13:00:30.449Z",
          "expirationDate": "2025-06-26T13:00:30.449Z",
          "credentialSubject": {
            "id": "did:pkh:eip155:1:0x6C994eEF6fdbeE8BCFF9016B7CE3A53b489Ad155",
            "@context": {
              "provider": "https://schema.org/Text",
              "nullifiers": {
                "@type": "https://schema.org/Text",
                "@container": "@list"
              }
            },
            "provider": "ClearTextGithubOrg#3loop#16974922",
            "nullifiers": [
              "v0.0.0:wO0dPv7J/ENbY3h96KYbk2KeP6A/KofyfxPFBihAQQM="
            ]
          }
        }
      },
      "description": "# Loop Decoder\n\nLoop Decoder is a TypeScript library with minimal external dependencies that transforms blockchain data into a human-readable format.\n\n## Key Features\n\n- Works in any JavaScript environment\n- Minimal external dependencies - you only need an RPC; everything else can be fetched from your own storage\n- Highly customizable - we don't force you to use a specific API or storage; instead, we provide data loaders\n\n## Transaction Decoder\n\nThe [Transaction Decoder](https://github.com/3loop/loop-decoder/tree/main/packages/transaction-decoder) package transforms raw transactions, including calldata, traces, and events, into a structured format with detailed information about all function calls and parameters. The decoded transaction includes:\n\n- Method calls\n- Trace calls\n- Events\n- All transfers\n- Interactions with other contracts\n- Error information\n\nSee the Decoded Transaction section in our [playground](https://loop-decoder-web.vercel.app/) for transaction examples.\n\n## Transaction Interpreter\n\nThe [Transaction Interpreter](https://github.com/3loop/loop-decoder/tree/main/packages/transaction-interpreter) allows you to understand what really happened in any transaction. In Loop Decoder, this is a JavaScript function that takes a Decoded Transaction and selects the most important fields and parameters based on the type of contract interacted with. The goal is to abstract away blockchain and smart contract nuances, producing an object understandable for both technical and non-technical users.\n\n## Examples\n\n- [Decoder HTTP Server](https://github.com/3loop/decoder-api) - A simple HTTP server that exposes a REST API to decode transactions\n- [Firebase Push Notifications](https://github.com/3loop/example-push-notifications) - Firebase Cloud Function that sends push notifications with decoded transactions\n- [Farcaster Frame](https://github.com/3loop/transaction-frame) - Farcaster Frame that displays transaction in a human-readable format\n- [Farcaster Bot](https://loop-decoder.3loop.io/recipes/fc-bot/) - Farcaster Bot for human-readable transaction alerts\n- [Telegram Bot](https://loop-decoder.3loop.io/recipes/tg-bot/) - Telegram Bot for human-readable transaction alerts\n\n## Links\n\n- [GitHub](https://github.com/3loop/loop-decoder/)\n- [Documentation](https://loop-decoder.3loop.io/)\n- [Playground](https://loop-decoder-web.vercel.app/)",
      "logoImgData": {},
      "bannerImgData": {},
      "projectGithub": "3loop",
      "projectTwitter": "3loop_io"
    }
  }
}